---
import BaseLayout from '../../layouts/BaseLayout.astro';
import CourseHeader from '../../components/CourseHeader.astro';
import LearningPath from '../../components/LearningPath.astro';
import TutorialCard from '../../components/TutorialCard.astro';
import { getCollection } from 'astro:content';

// Get all HTML tutorials from external repository
const htmlTutorials = await getCollection('external-html-tutorials');
const publishedTutorials = htmlTutorials.filter(tutorial => tutorial.data.published);
---

<BaseLayout title="HTML Tutorials - Web Tutorials" description="Master the structure and markup language of the web. Learn how to create semantic, accessible web pages with our comprehensive HTML tutorials.">
  <div class="container">
    <!-- Course header -->
    <CourseHeader
      title="HTML Tutorials"
      description="Master the structure and markup language of the web. Learn how to create semantic, accessible web pages with our comprehensive HTML tutorials."
      iconUrl="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original.svg"
      iconAlt="HTML5 Logo"
      courseColor="#e34c26"
      totalTutorials={publishedTutorials.length}
      lastUpdated="December 2024"
    />

    <!-- Learning Path -->
    <LearningPath 
      courseName="HTML"
      courseIcon="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original.svg"
      courseColor="#e34c26"
      collectionName="external-html-tutorials"
    />

    <!-- Search and filters -->
    <div class="search-filters">
      <input type="text" class="search-input" placeholder="Search HTML tutorials..." id="searchInput">
      <select class="filter-select" id="difficultyFilter">
        <option value="">All Levels</option>
        <option value="beginner">Beginner</option>
        <option value="intermediate">Intermediate</option>
        <option value="advanced">Advanced</option>
      </select>
      <select class="filter-select" id="topicFilter">
        <option value="">All Topics</option>
        <option value="basics">Basics</option>
        <option value="semantic">Semantic HTML</option>
        <option value="forms">Forms</option>
        <option value="accessibility">Accessibility</option>
        <option value="seo">SEO</option>
      </select>
    </div>

    <!-- Articles grid -->
    <div class="article-grid" id="articleGrid">
      {publishedTutorials.map((tutorial) => (
        <TutorialCard
          title={tutorial.data.title}
          description={tutorial.data.description}
          difficulty={tutorial.data.difficulty}
          readTime={tutorial.data.readTime}
          slug={tutorial.slug}
          tags={tutorial.data.tags}
          category="HTML"
        />
      ))}
    </div>

    <!-- Pagination -->
    <div class="pagination">
      <a href="#" class="disabled">&laquo; Previous</a>
      <span class="current">1</span>
      <a href="#">2</a>
      <a href="#">3</a>
      <a href="#">4</a>
      <a href="#">5</a>
      <span>...</span>
      <a href="#">100</a>
      <a href="#">Next &raquo;</a>
    </div>

  </div>

  <script>
    // Simple search and filter functionality
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput');
      const difficultyFilter = document.getElementById('difficultyFilter');
      const topicFilter = document.getElementById('topicFilter');
      const articleGrid = document.getElementById('articleGrid');
      const articles = articleGrid.querySelectorAll('.article-card');

      function filterArticles() {
        const searchTerm = searchInput.value.toLowerCase();
        const difficulty = difficultyFilter.value;
        const topic = topicFilter.value;

        articles.forEach(article => {
          const title = article.querySelector('h3 a').textContent.toLowerCase();
          const description = article.querySelector('p').textContent.toLowerCase();
          const articleDifficulty = article.dataset.difficulty;
          const articleTopic = article.dataset.topic;

          const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
          const matchesDifficulty = !difficulty || articleDifficulty === difficulty;
          const matchesTopic = !topic || articleTopic === topic;

          if (matchesSearch && matchesDifficulty && matchesTopic) {
            article.style.display = 'block';
          } else {
            article.style.display = 'none';
          }
        });
      }

      searchInput.addEventListener('input', filterArticles);
      difficultyFilter.addEventListener('change', filterArticles);
      topicFilter.addEventListener('change', filterArticles);
    });
  </script>
</BaseLayout>
